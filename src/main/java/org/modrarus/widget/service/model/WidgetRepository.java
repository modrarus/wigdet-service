package org.modrarus.widget.service.model;

import java.util.List;
import java.util.Optional;

/**
 * Основной интерфейс репозитория виджетов
 */
public interface WidgetRepository {
	/**
	 * Сохранение в репозиторий виджета.
	 * В случае отсутствия у виджета идентификатора (новый виджет) он будет сохранен под новым идентификатором,
	 * также при отсутствии у виджета zIndex он будет установлен значение, превышающее текущий максимум
	 * среди виджетов на 1.
	 * В случае передачи виджета, присутствующего в хранилище его данные будут обновлены
	 * @param _widget Виджет
	 * @return Зарегистрированый в репозитории виджет
	 */
	public Widget save(Widget _widget);
	
	/**
	 * Получение виджета по идентификатору
	 * @param _id Идентификатор
	 */
	public Optional<Widget> getById(Long _id);
	
	/**
	 * Удаление виджета
	 * @param _id Идентификатор удаляемого виджета
	 * @return Флаг успешного удаления, если виджет под данным идентификатором
	 * не зарегистрирован в репозитории возвращается false
	 */
	public boolean deleteById(Long _id);
	
	/**
	 * Получение всех виджетов в репозитории
	 * @return Список всех виджетов в репозитории
	 */
	public List<Widget> getAll();
	
	/**
	 * Получение всех виджетов в определенной зоне
	 * @param _area Зона
	 * @return Список всех соответствующих виджетов
	 */
	public List<Widget> getAllInArea(Area _area);
}